@inject StyleSidebarViewModel ViewModel

<RadzenStack Orientation="Orientation.Vertical">
    <RadzenText TextStyle="TextStyle.DisplayH6">Properties</RadzenText>
    @if (ViewModel.IsEnable.Value && ViewModel.FocusedCount.Value > 0 && ViewModel.FirstSelectedElement.Value.Clade is not null)
    {
        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
            <RadzenText>Color: </RadzenText>
            <RadzenColorPicker @bind-Value="ViewModel.Color.Value" />
        </RadzenStack>
        @if (ViewModel.FocusedCount.Value == 1 && ViewModel.SelectionTarget.Value is SelectionMode.Node)
        {
            <RadzenRow JustifyContent="JustifyContent.SpaceBetween" AlignItems="AlignItems.Center">
                <RadzenText>Clade label:</RadzenText>
                <RadzenTextBox @bind-Value="ViewModel.CladeLabel.Value" />
            </RadzenRow>
        }
    }
</RadzenStack>


@code {
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        ViewModel!.PropertyChanged += (_, _) => InvokeAsync(StateHasChanged);
        await Task.CompletedTask;
    }
}
